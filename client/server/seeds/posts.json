[
  {
    "title": "Python Test",
    "description": "This is a test",
    "isPublic": true,
    "publishDate": "2019-01-01T00:00:00.000Z",
    "stars": 0,
    "assignments": [
      {
        "question": "Python assignments",
        "language": "python",
        "code_template": "print('Hello World')",
        "test_cases": [
          {
            "stdin": "",
            "isHidden": false,
            "stdout": "Hello World",
            "configuration": {
              "time_limit": 2,
              "memory_limit": 100
            },
            "replace": [{
              "from": "",
              "to": ""
            }]
          },
          {
            "stdin": "",
            "isHidden": false,
            "stdout": "Hello World",
            "configuration": {
              "time_limit": 2,
              "memory_limit": 100
            },
            "replace": [{
              "from": "",
              "to": ""
            }]
          },
          {
            "stdin": "",
            "isHidden": false,
            "stdout": "Hello World",
            "configuration": {
              "time_limit": 2,
              "memory_limit": 100
            },
            "replace": [{
              "from": "",
              "to": ""
            }]
          }
        ]
      }
    ]
  },
  {
    "title": "CPP Test",
    "description": "This is a test",
    "isPublic": true,
    "publishDate": "2019-01-01T00:00:00.000Z",
    "stars": 0,
    "assignments": [
      {
        "question": "CPP assignments",
        "language": "cpp",
        "code_template": "#include <iostream>\nusing namespace std;\nint main() {\n\tcout << \"Hello World\";\n\treturn 0;\n}",
        "test_cases": [
          {
            "stdin": "",
            "isHidden": false,
            "stdout": "Hello World",
            "configuration": {
              "time_limit": 2,
              "memory_limit": 100
            },
            "replace": [{
              "from": "",
              "to": ""
            }]
          },
          {
            "stdin": "",
            "isHidden": false,
            "stdout": "Hello World",
            "configuration": {
              "time_limit": 2,
              "memory_limit": 100
            },
            "replace": [{
              "from": "",
              "to": ""
            }]
          },
          {
            "stdin": "",
            "isHidden": false,
            "stdout": "Hello World",
            "configuration": {
              "time_limit": 2,
              "memory_limit": 100
            },
            "replace": [{
              "from": "",
              "to": ""
            }]
          }
        ]
      }
    ]
  },
  {
    "title": "C Test",
    "description": "This is a test",
    "isPublic": true,
    "publishDate": "2019-01-01T00:00:00.000Z",
    "stars": 0,
    "assignments": [
      {
        "question": "C assignments",
        "language": "c",
        "code_template": "#include <stdio.h>\nint main() {\n\tprintf(\"Hello, World!\");\n\treturn 0;\n}",
        "test_cases": [
          {
            "stdin": "",
            "isHidden": false,
            "stdout": "Hello World",
            "configuration": {
              "time_limit": 2,
              "memory_limit": 100
            },
            "replace": [{
              "from": "",
              "to": ""
            }]
          },
          {
            "stdin": "",
            "isHidden": false,
            "stdout": "Hello World",
            "configuration": {
              "time_limit": 2,
              "memory_limit": 100
            },
            "replace": [{
              "from": "",
              "to": ""
            }]
          },
          {
            "stdin": "",
            "isHidden": false,
            "stdout": "Hello World",
            "configuration": {
              "time_limit": 2,
              "memory_limit": 100
            },
            "replace": [{
              "from": "",
              "to": ""
            }]
          }
        ]
      }
    ]
  },
  {
    "title": "NodeJS Test without error",
    "description": "This is a test",
    "isPublic": true,
    "publishDate": "2019-01-01T00:00:00.000Z",
    "stars": 0,
    "assignments": [
      {
        "question": "NodeJS assignments",
        "language": "nodejs",
        "code_template": "let printstr = \"<replace-1>\";\nconsole.log(printstr)",
        "test_cases": [
          {
            "stdin": "",
            "isHidden": false,
            "stdout": "Hello World",
            "configuration": {
              "time_limit": 2,
              "memory_limit": 100
            },
            "replace": [{
              "from": "<replace-1>",
              "to": "hello world"
            }]
          },
          {
            "stdin": "",
            "isHidden": false,
            "stdout": "Hello World",
            "configuration": {
              "time_limit": 2,
              "memory_limit": 100
            },
            "replace": [{
              "from": "<replace-1>",
              "to": "hello world"
            }]
          },
          {
            "stdin": "",
            "isHidden": false,
            "stdout": "Hello World",
            "configuration": {
              "time_limit": 2,
              "memory_limit": 100
            },
            "replace": [{
              "from": "<replace-1>",
              "to": "hello world"
            }]
          }
        ]
      }
    ]
  },
  {
    "title": "Python Program without error",
    "description": "This is a test",
    "isPublic": true,
    "publishDate": "2019-01-01T00:00:00.000Z",
    "stars": 0,
    "assignments": [
      {
        "question": "Python assignments",
        "language": "python",
        "code_template": "if __name__ == '__main__':\n\tn = int(input())\n\tarr = map(int, input().split())\n\tarr = list(set(arr))\n\tarr.sort()\n\tprint(arr[-2])",
        "test_cases": [
          {
            "stdin": "4 \n57 57 -57 57",
            "isHidden": false,
            "stdout": "-57",
            "configuration": {
              "time_limit": 2,
              "memory_limit": 100
            },
            "replace": [{
              "from": "",
              "to": ""
            }]
          },
          {
            "stdin": "10 \n5 5 5 5 5 5 5 5 5 6",
            "isHidden": false,
            "stdout": "5",
            "configuration": {
              "time_limit": 2,
              "memory_limit": 100
            },
            "replace": [{
              "from": "",
              "to": ""
            }]
          }
        ]
      }
    ]
  },
  {
    "title": "Python Logical Error",
    "description": "This is a test",
    "isPublic": true,
    "publishDate": "2019-01-01T00:00:00.000Z",
    "stars": 0,
    "assignments": [
      {
        "question": "Python assignments",
        "language": "python",
        "code_template": "if __name__ == '__main__':\n\tn = int(input())\n\tarr = map(int, input().split())\n\tarr = list(set(arr))\n\tprint(arr[-2])",
        "test_cases": [
          {
            "stdin": "4 \n57 57 -57 57",
            "isHidden": false,
            "stdout": "-57",
            "configuration": {
              "time_limit": 2,
              "memory_limit": 100
            },
            "replace": [{
              "from": "",
              "to": ""
            }]
          },
          {
            "stdin": "10 \n5 5 5 5 5 5 5 5 5 6",
            "isHidden": false,
            "stdout": "5",
            "configuration": {
              "time_limit": 2,
              "memory_limit": 100
            },
            "replace": [{
              "from": "",
              "to": ""
            }]
          }
        ]
      }
    ]
  },
  {
    "title": "Python Syntax Error",
    "description": "This is a test",
    "isPublic": true,
    "publishDate": "2019-01-01T00:00:00.000Z",
    "stars": 0,
    "assignments": [
      {
        "question": "Python assignments",
        "language": "python",
        "code_template": "if __name__ == '__main__':\n\tn = int(input())\n\tarr = map(int, input().split())_\n\tarr = list(set(arr))\n\tprint(arr[-2])",
        "test_cases": [
          {
            "stdin": "4 \n57 57 -57 57",
            "isHidden": false,
            "stdout": "-57",
            "configuration": {
              "time_limit": 2,
              "memory_limit": 100
            },
            "replace": [{
              "from": "",
              "to": ""
            }]
          },
          {
            "stdin": "10 \n5 5 5 5 5 5 5 5 5 6",
            "isHidden": false,
            "stdout": "5",
            "configuration": {
              "time_limit": 2,
              "memory_limit": 100
            },
            "replace": [{
              "from": "",
              "to": ""
            }]
          }
        ]
      }
    ]
  },
  {
    "title": "Python Resources Error (Time Limit -- Fork Bomb)",
    "description": "This is a test",
    "isPublic": true,
    "publishDate": "2019-01-01T00:00:00.000Z",
    "stars": 0,
    "assignments": [
      {
        "question": "Python assignments",
        "language": "python",
        "code_template": "[o.fork() for (o, i) in [(__import__('os'), __import__('itertools'))] for x in i.repeat(0)]",
        "test_cases": [
          {
            "stdin": "4 \n57 57 -57 57",
            "isHidden": false,
            "stdout": "-57",
            "configuration": {
              "time_limit": 2,
              "memory_limit": 100
            },
            "replace": [{
              "from": "",
              "to": ""
            }]
          }
        ]
      }
    ]
  },
  {
    "title": "Python Runtime Error (String integer concatenation)",
    "description": "This is a test",
    "isPublic": true,
    "publishDate": "2019-01-01T00:00:00.000Z",
    "stars": 0,
    "assignments": [
      {
        "question": "Python assignments",
        "language": "python",
        "code_template": "if __name__ == '__main__':\n\tinputString = input(\"\")\n\tinputNumber = int(input(\"\"))\n\tprint(inputString + inputNumber)",
        "test_cases": [
          {
            "stdin": "1\n2",
            "isHidden": false,
            "stdout": "3",
            "configuration": {
              "time_limit": 2,
              "memory_limit": 100
            },
            "replace": [{
              "from": "",
              "to": ""
            }]
          }
        ]
      }
    ]
  },
  {
    "title": "CPP Program without error",
    "description": "This is a test",
    "isPublic": true,
    "publishDate": "2019-01-01T00:00:00.000Z",
    "stars": 0,
    "assignments": [
      {
        "question": "CPP assignments",
        "language": "cpp",
        "code_template": "#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\nvoid solve(string str, int strlen, int noOftestCase){\n    int counter = 1;\n    cout << \"Case #\" << noOftestCase +1<< \": \";\n    for (int i = 0; i < strlen - 1; i++){\n        cout << counter << \" \";\n        if (str[i] < str[i+1]){\n            counter++;\n        }else counter = 1;\n    }\n    cout << counter << endl;\n}\n\nint main(){\n    int noOfTestCase, strlengthHold;\n    string strHold;\n    vector<int> strlength;\n    vector<string> str;\n    cin >> noOfTestCase;\n    cin.ignore();\n    for (int i =0 ;i<noOfTestCase; i++){\n        cin >> strlengthHold;\n        cin.ignore();\n        strlength.push_back(strlengthHold);\n        cin >> strHold;\n        cin.ignore();\n        str.push_back(strHold);\n        solve(str[i], strlength[i], i);\n    }\n}\n\n",
        "test_cases": [
          {
            "stdin": "2\n4\nABBC\n6\nABACDA",
            "isHidden": false,
            "stdout": "Case #1: 1 2 1 2\nCase #2: 1 2 1 2 3 1",
            "configuration": {
              "time_limit": 2,
              "memory_limit": 100
            },
            "replace": [{
              "from": "",
              "to": ""
            }]
          }
        ]
      }
    ]
  },
  {
    "title": "CPP Program with syntax error (Compile Time Error)",
    "description": "This is a test",
    "isPublic": true,
    "publishDate": "2019-01-01T00:00:00.000Z",
    "stars": 0,
    "assignments": [
      {
        "question": "CPP assignments",
        "language": "cpp",
        "code_template": "#include <iostream>\nusing namespace std;\n\nint main(){\n    int a[5];\n    for (int i = 0; i < 5; i++){\n        cout << a[i] << endl;\n    }\n    cout << a[6] << endl;\n}\n",
        "test_cases": [
          {
            "stdin": "2\n4\nABBC\n6\nABACDA",
            "isHidden": false,
            "stdout": "Case #1: 1 2 1 2\nCase #2: 1 2 1 2 3 1",
            "configuration": {
              "time_limit": 2,
              "memory_limit": 100
            },
            "replace": [{
              "from": "",
              "to": ""
            }]
          }
        ]
      }
    ]
  },
  {
    "title": "CPP Runtime Error (Index Out of Range)",
    "description": "This is a test",
    "isPublic": true,
    "publishDate": "2019-01-01T00:00:00.000Z",
    "stars": 0,
    "assignments": [
      {
        "question": "CPP assignments",
        "language": "cpp",
        "code_template": "#include <iostream>\nusing namespace std;\n\nint main(){\n    int a[5];\n    for (int i = 0; i < 5; i++){\n        cout << a[i] << endl;\n    }\n    cout << a[6] << endl;\n}\n",
        "test_cases": [
          {
            "stdin": "",
            "isHidden": false,
            "stdout": "5",
            "configuration": {
              "time_limit": 2,
              "memory_limit": 100
            },
            "replace": [{
              "from": "",
              "to": ""
            }]
          }
        ]
      }
    ]
  },
  {
    "title": "CPP Resources Error (Time Limit -- Fork Bomb)",
    "description": "This is a test",
    "isPublic": true,
    "publishDate": "2019-01-01T00:00:00.000Z",
    "stars": 0,
    "assignments": [
      {
        "question": "CPP assignments",
        "language": "cpp",
        "code_template": "#include <cstdlib>\nint main(int argc, char **argv)\n{\n    while (1)\n        system(argv[0]);\n    return 0;\n}\n",
        "test_cases": [
          {
            "stdin": "",
            "isHidden": false,
            "stdout": "5",
            "configuration": {
              "time_limit": 2,
              "memory_limit": 100
            },
            "replace": [{
              "from": "",
              "to": ""
            }]
          }
        ]
      }
    ]
  },
  {
    "title": "NodeJS Test with logical error",
    "description": "This is a test",
    "isPublic": true,
    "publishDate": "2019-01-01T00:00:00.000Z",
    "stars": 0,
    "assignments": [
      {
        "question": "NodeJS assignments",
        "language": "nodejs",
        "code_template": "let n;\nlet arr = [\"<replace-1>\"];\n\narr = [...new Set(arr)];\narr.sort((a, b) => b - a);\nconsole.log(arr[0]);\n",
        "test_cases": [
          {
            "stdin": "",
            "isHidden": false,
            "stdout": "-57",
            "configuration": {
              "time_limit": 2,
              "memory_limit": 100
            },
            "replace": [{
              "from": "\"<replace-1>\"",
              "to": "57, 57, -57, 57"
            }]
          },
          {
            "stdin": "",
            "isHidden": false,
            "stdout": "5",
            "configuration": {
              "time_limit": 2,
              "memory_limit": 100
            },
            "replace": [{
              "from": "\"<replace-1>\"",
              "to": "5, 5, 5, 5, 5, 5, 5, 5, 5, 6"
            }]
          }
        ]
      }
    ]
  },
  {
    "title": "NodeJS Test with resources error",
    "description": "This is a test",
    "isPublic": true,
    "publishDate": "2019-01-01T00:00:00.000Z",
    "stars": 0,
    "assignments": [
      {
        "question": "NodeJS assignments",
        "language": "nodejs",
        "code_template": "(function f() {\n    require('child_process').spawn(\n        process.argv[0],\n        ['-e', '(' + f.toString() + '());'])\n    ;}()\n);\n",
        "test_cases": [
          {
            "stdin": "",
            "isHidden": false,
            "stdout": "",
            "configuration": {
              "time_limit": 2,
              "memory_limit": 100
            },
            "replace": [{
              "from": "",
              "to": ""
            }]
          }
        ]
      }
    ]
  }
]
