kind: Namespace
apiVersion: v1
metadata:
  name: client
  labels:
    name: client
---
apiVersion: v1
kind: Secret
metadata:
  name: client-secrets
  namespace: client
type: Opaque
stringData:
  GOOGLE_CLIENT_SECRET: <GOOGLE_CLIENT_SECRET>
  GOOGLE_CLIENT_ID: <GOOGLE_CLIENT_ID>
---
apiVersion: v1
kind: Service
metadata:
  name: client
  namespace: client
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb" # Use "alb" or remove for default ELB type which is classic
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
spec:
  type: LoadBalancer
  selector:
    app: client-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
      name: http
    - protocol: TCP
      port: 443
      targetPort: 8443
      name: https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: client-app
  name: client-app
  namespace: client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: client-app
  template:
    metadata:
      labels:
        app: client-app
    spec:
      containers:
        - name: client-app
          image: chan1992241/client:ssl
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: client-configmap
            - secretRef:
                name: client-secrets
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
          volumeMounts:
            - name: tls-volume
              mountPath: /app/server/certs
              readOnly: true
      volumes:
        - name: tls-volume
          secret:
            secretName: tls-secrets
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: client-configmap
  namespace: client
data:
  ENV: production
  MONGO_URI: mongodb://mongo.mongo.svc.cluster.local:27017
  ROUTER_URL: http://router-service.router.svc.cluster.local:80
---
apiVersion: v1
kind: Secret
metadata:
  name: tls-secrets
  namespace: client
type: Opaque
data:
  server.crt: <SERVER_CRT>
  server.key: <SERVER_KEY>
