name: 3. Cluster Deprovision

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment
        options: 
        - staging
      project:
        type: choice
        description: Project
        options:
        - algorint
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  ENVIRONMENT: ${{ github.event.inputs.environment }}
  PROJECT: ${{ github.event.inputs.project }}

jobs:
  deprovision:
    name: 'Cluster Deprovision'
    environment: ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: 'Setup NodeJS'
      uses: actions/setup-node@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Kubectl tool installer
      uses: Azure/setup-kubectl@v4.0.0
      with:
        version: latest

    - name: Configure AWS Credentials 
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1

    - name: Configure Kube-Config
      run: |
        aws eks --region ap-southeast-1 update-kubeconfig --name eks-cluster
        kubectl version

    - name: Install eksctl
      run: |
        ARCH=amd64
        PLATFORM=$(uname -s)_$ARCH
        curl -sLO "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$PLATFORM.tar.gz"
        curl -sL "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_checksums.txt" | grep $PLATFORM | sha256sum --check
        tar -xzf eksctl_$PLATFORM.tar.gz -C /tmp && rm eksctl_$PLATFORM.tar.gz
        sudo mv /tmp/eksctl /usr/local/bin

    - name: Destroy Client Application
      working-directory: ${{ github.workspace }}/client/kubernetes/deployment
      run: |
        kubectl delete -f client-aws.yml
    
    - name: Destroy IRSA
      run: |
        eksctl delete iamserviceaccount --name=aws-load-balancer-controller --namespace=kube-system --cluster=eks-cluster --wait
        aws iam delete-policy --policy-arn arn:aws:iam::999229353546:policy/AWSLoadBalancerControllerIAMPolicy

    - name: Plan Terraform
      working-directory: ${{ github.workspace }}/terraform
      id: plan
      run: |
        terraform init
        terraform workspace select -or-create ${{ env.ENVIRONMENT }}-${{ env.PROJECT }} 
        terraform plan -destroy

    - name: Apply Terraform
      working-directory: ${{ github.workspace }}/terraform
      run: |
        terraform destroy -auto-approve